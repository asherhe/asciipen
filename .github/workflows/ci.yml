name: ci
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  linux-x86_64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [
          { cc: gcc, cxx: g++, toolchain: gcc },
          { cc: clang, cxx: clang++, toolchain: clang }
        ]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Deps
      run: |
        sudo apt-get update
        sudo apt-get install gcc clang cmake ninja-build libfuse2 xorg-dev
        curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage --output ./appimagetool
        chmod a+x ./appimagetool
        sudo mv appimagetool /usr/local/bin/appimagetool

    - name: Generate Build Files & Build
      run: |
        export CC=${{ matrix.compiler.cc }}
        export CXX=${{ matrix.compiler.cxx }}
        make all GENERATOR=Ninja BUILD_TYPE=Release NUM_JOBS=4
        mv ./build/asciipen ./

    - name: Build AppImage
      run: |
        mkdir aDir
        mkdir aDir/usr/
        mkdir aDir/usr/bin/
        cp ./asciipen aDir/usr/bin/
        cp ./data/asciipen.desktop aDir/
        cp ./data/asciipen.png aDir/
        echo -e "#!/bin/sh\n\
        HERE=\"\$(dirname \"\$(readlink -f \"\${0}\")\")\"\n\
        EXEC=\"\${HERE}/usr/bin/asciipen\"\n\
        exec \"\${EXEC}\"" >> aDir/AppRun
        chmod a+x aDir/AppRun
        chmod a+x aDir/usr/bin/asciipen
        mv aDir asciipen.AppDir
        ARCH=x86_64 appimagetool asciipen.AppDir

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux_appimage-x86_64-${{ matrix.compiler.toolchain }}
        path: asciipen-x86_64.AppImage
        if-no-files-found: error

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-x86_64-${{ matrix.compiler.toolchain }}
        path: ./asciipen
        if-no-files-found: error

  windows-x86_64:
    runs-on: windows-2022
    strategy:
      matrix:
        architecture: [x64, Win32]
        generator: [ { short_name: "vs17_2022", cmake_name: "Visual Studio 17 2022" } ]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install ffmpeg & generate icons
      run: |
        choco install ffmpeg
        ffmpeg -i data/asciipen.png data/asciipen.ico

    - name: Generate Build Files & Build
      run: |
        make all GENERATOR="${{ matrix.generator.cmake_name }}" BUILD_TYPE=Release NUM_JOBS=4 CMAKE_GEN_FLAGS='-A "${{ matrix.architecture }}" -T "ClangCL"'

    - name: Zip Binaries
      uses: vimtor/action-zip@v1
      with:
        files: ./build/Release/
        recursive: true
        dest: ./asciipen.zip

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: win-${{ matrix.architecture }}-${{ matrix.generator.short_name }}
        if-no-files-found: error
        path: ./asciipen.zip

  osx_x86_64:
    runs-on: macos-12 # Monterey
    strategy:
      matrix:
        architecture: [x86_64, arm64]
        generator: [Xcode]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Lint Info.plist
      run: plutil data/Info.plist

    - name: Generate .icns
      run: |
        mkdir asciipen.iconset
        sips -z 16 16     data/asciipen.png --out asciipen.iconset/icon_16x16.png
        sips -z 32 32     data/asciipen.png --out asciipen.iconset/icon_16x16@2x.png
        sips -z 32 32     data/asciipen.png --out asciipen.iconset/icon_32x32.png
        sips -z 64 64     data/asciipen.png --out asciipen.iconset/icon_32x32@2x.png
        sips -z 128 128   data/asciipen.png --out asciipen.iconset/icon_128x128.png
        sips -z 256 256   data/asciipen.png --out asciipen.iconset/icon_128x128@2x.png
        sips -z 256 256   data/asciipen.png --out asciipen.iconset/icon_256x256.png
        sips -z 512 512   data/asciipen.png --out asciipen.iconset/icon_256x256@2x.png
        sips -z 512 512   data/asciipen.png --out asciipen.iconset/icon_512x512.png
        sips -z 1024 1024 data/asciipen.png --out asciipen.iconset/icon_512x512@2x.png
        iconutil -c icns -o asciipen.icns asciipen.iconset
        rm -R asciipen.iconset

    - name: Generate Build Files & Build
      run: |
        make all GENERATOR="${{ matrix.generator }}" BUILD_TYPE=Release NUM_JOBS=4 CMAKE_GEN_FLAGS='-DCMAKE_OSX_ARCHITECTURES=${{ matrix.architecture }} -DBUILD_APPLE_BUNDLE=ON'

    - name: Create Zip
      run: zip -r asciipen.zip ./build/Release/asciipen.app/

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: osx-${{ matrix.architecture }}-${{ matrix.generator }}
        path: ./asciipen.zip
        if-no-files-found: error

  update-ci-release:
    needs: [linux-x86_64, windows-x86_64, osx_x86_64]
    permissions:
      contents: write
    if: |
      github.event_name == 'push' ||
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        tag_name: latest-git
        delete_release: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/download-artifact@v3
      with:
        name: win-x64-vs17_2022
        path: ./win-x64-vs17_2022/

    - uses: actions/download-artifact@v3
      with:
        name: win-Win32-vs17_2022
        path: ./win-Win32-vs17_2022/

    - uses: actions/download-artifact@v3
      with:
        name: linux_appimage-x86_64-clang
        path: ./linux_appimage-x86_64-clang/

    - uses: actions/download-artifact@v3
      with:
        name: linux-x86_64-clang
        path: ./linux-x86_64-clang/

    - uses: actions/download-artifact@v3
      with:
        name: linux_appimage-x86_64-gcc
        path: ./linux_appimage-x86_64-gcc/

    - uses: actions/download-artifact@v3
      with:
        name: linux-x86_64-gcc
        path: ./linux-x86_64-gcc/

    - uses: actions/download-artifact@v3
      with:
        name: osx-arm64-Xcode
        path: ./osx-arm64-Xcode/

    - uses: actions/download-artifact@v3
      with:
        name: osx-x86_64-Xcode
        path: ./osx-x86_64-Xcode/

    - name: Rename
      run: |
        mv ./win-x64-vs17_2022/asciipen.zip ./win-x64-vs17_2022.zip
        mv ./win-Win32-vs17_2022/asciipen.zip ./win-x86-vs17_2022.zip

        mv ./linux_appimage-x86_64-clang/*.AppImage ./linux-x64-clang.AppImage
        mv ./linux-x86_64-clang/asciipen ./linux-x64-clang

        mv ./linux_appimage-x86_64-gcc/*.AppImage ./linux-x64-gcc.AppImage
        mv ./linux-x86_64-gcc/asciipen ./linux-x64-gcc

        mv ./osx-arm64-Xcode/asciipen.zip ./osx-arm64-Xcode.zip
        mv ./osx-x86_64-Xcode/asciipen.zip ./osx-x64-Xcode.zip

    - uses: ncipollo/release-action@v1
      with:
        name: "Asciipen Latest Git"
        body: "this release is not for daily use."
        tag: "latest-git"
        commit: "master"
        prerelease: true
        allowUpdates: true
        generateReleaseNotes: true
        artifactErrorsFailBuild: true
        artifacts: |
          ./win-x64-vs17_2022.zip
          ./win-x86-vs17_2022.zip
          ./linux-x64-gcc.AppImage
          ./linux-x64-gcc
          ./linux-x64-clang.AppImage
          ./linux-x64-clang
          ./osx-arm64-Xcode.zip
          ./osx-x64-Xcode.zip
